func.func @__nvqpp__mlirgen__ghzILm5EE() attributes {"cudaq-entrypoint", "cudaq-kernel"} {
  %0 = quake.alloca !quake.veq<5>
  %1 = quake.extract_ref %0[4] : (!quake.veq<5>) -> !quake.ref
  %2 = quake.extract_ref %0[2] : (!quake.veq<5>) -> !quake.ref
  quake.x [%1] %2 : (!quake.ref, !quake.ref) -> ()
  %3 = quake.extract_ref %0[3] : (!quake.veq<5>) -> !quake.ref
  %4 = quake.extract_ref %0[1] : (!quake.veq<5>) -> !quake.ref
  quake.x [%3] %4 : (!quake.ref, !quake.ref) -> ()
  %5 = quake.extract_ref %0[4] : (!quake.veq<5>) -> !quake.ref
  %6 = quake.extract_ref %0[1] : (!quake.veq<5>) -> !quake.ref
  quake.x [%5] %6 : (!quake.ref, !quake.ref) -> ()
  %7 = quake.extract_ref %0[0] : (!quake.veq<5>) -> !quake.ref
  %measOut = quake.mz %7 : (!quake.ref) -> !quake.measure
  %8 = quake.extract_ref %0[1] : (!quake.veq<5>) -> !quake.ref
  %measOut_0 = quake.mz %8 : (!quake.ref) -> !quake.measure
  %9 = quake.extract_ref %0[2] : (!quake.veq<5>) -> !quake.ref
  %measOut_1 = quake.mz %9 : (!quake.ref) -> !quake.measure
  %10 = quake.extract_ref %0[3] : (!quake.veq<5>) -> !quake.ref
  %measOut_2 = quake.mz %10 : (!quake.ref) -> !quake.measure
  %11 = quake.extract_ref %0[4] : (!quake.veq<5>) -> !quake.ref
  %measOut_3 = quake.mz %11 : (!quake.ref) -> !quake.measure
  return
}
