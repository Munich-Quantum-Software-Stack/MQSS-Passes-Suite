image: ubuntu:latest
#image: ubuntu:20.04
#
#variables:
#  TZ: "Europe/Berlin"

before_script:
  - apt update
  - apt install -y cmake llvm libopenmpi-dev g++
  - export LLVM_INCLUDE_PATH=$(llvm-config --includedir)
  - export CMAKE_PREFIX_PATH=$(llvm-config --libdir)/cmake/llvm
# - export LC_ALL=en_US.UTF-8
  - cd qdmi
  - mkdir build
  - cd build
  - cmake ..
  - make
  - echo QDMI built successfully
  - cd ../../selector
  - mkdir build
  - cd build
  - cmake -DCUSTOM_EXECUTABLE_NAME=qselectorrunner_d ..
  - cmake --build .
# - export LC_ALL=en_US.UTF-8
  - echo Selector Runner built successfully
  - cd ../..
  - mkdir build
  - cd build
# - export CMAKE_PREFIX_PATH=$(llvm-config --libdir)/cmake/llvm
  - cmake -DCUSTOM_EXECUTABLE_NAME=qpassrunner_d -DCUSTOM_QDMI_PATH=qdmi ..
  - cmake --build .
# - export LC_ALL=en_US.UTF-8
  - echo Pass Runner built successfully
  - cd ../tests
  - mpic++ -std=c++14 test.cpp -o test
  - echo Test built successfully
  - cd ..

stages:
  - analyze
  - test

#analyze:
#  stage: analyze
#  script:
#    - clang --analyze -o analysis_log -I$LLVM_INCLUDE_PATH src/qpassrunner_d.cpp
#  artifacts:
#    paths:
#      analysis_log

testing:
  stage: test
  script:
    - cd build
    - ./qpassrunner_d &
    - sleep 1
    - cd selector/build/
    - ./qselectorrunner_d &
    - sleep 1
    - ../../tests/test

