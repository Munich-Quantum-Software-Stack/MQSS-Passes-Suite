func.func @__nvqpp__mlirgen__testILm3EE() attributes {"cudaq-entrypoint", "cudaq-kernel"} {
  %cst = arith.constant 5.141600e+00 : f64
  %cst_0 = arith.constant 2.400000e+00 : f64
  %0 = quake.alloca !quake.veq<3>
  %1 = quake.extract_ref %0[1] : (!quake.veq<3>) -> !quake.ref
  quake.z %1 : (!quake.ref) -> ()
  %2 = quake.extract_ref %0[2] : (!quake.veq<3>) -> !quake.ref
  quake.rz (%cst_0) %2 : (f64, !quake.ref) -> ()
  %3 = quake.extract_ref %0[0] : (!quake.veq<3>) -> !quake.ref
  %4 = quake.extract_ref %0[1] : (!quake.veq<3>) -> !quake.ref
  quake.x [%3] %4 : (!quake.ref, !quake.ref) -> ()
  %5 = quake.extract_ref %0[1] : (!quake.veq<3>) -> !quake.ref
  quake.z %5 : (!quake.ref) -> ()
  %6 = quake.extract_ref %0[1] : (!quake.veq<3>) -> !quake.ref
  %7 = quake.extract_ref %0[0] : (!quake.veq<3>) -> !quake.ref
  quake.x [%6] %7 : (!quake.ref, !quake.ref) -> ()
  %8 = quake.extract_ref %0[1] : (!quake.veq<3>) -> !quake.ref
  quake.z %8 : (!quake.ref) -> ()
  %9 = quake.extract_ref %0[1] : (!quake.veq<3>) -> !quake.ref
  quake.rx (%cst) %9 : (f64, !quake.ref) -> ()
  %10 = quake.extract_ref %0[0] : (!quake.veq<3>) -> !quake.ref
  %11 = quake.extract_ref %0[1] : (!quake.veq<3>) -> !quake.ref
  quake.x [%10] %11 : (!quake.ref, !quake.ref) -> ()
  %measOut = quake.mz %0 : (!quake.veq<3>) -> !cc.stdvec<!quake.measure>
  return
}
