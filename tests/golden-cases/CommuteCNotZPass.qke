module attributes {llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128", llvm.triple = "x86_64-unknown-linux-gnu", quake.mangled_name_map = {__nvqpp__mlirgen__testILm3EE = "_ZN4testILm3EEclEv"}} {
  func.func @__nvqpp__mlirgen__testILm3EE() attributes {"cudaq-entrypoint", "cudaq-kernel"} {
    %cst = arith.constant 5.141600e+00 : f64
    %cst_0 = arith.constant 2.400000e+00 : f64
    %0 = quake.alloca !quake.veq<3>
    %1 = quake.extract_ref %0[0] : (!quake.veq<3>) -> !quake.ref
    %2 = quake.extract_ref %0[1] : (!quake.veq<3>) -> !quake.ref
    quake.x [%1] %2 : (!quake.ref, !quake.ref) -> ()
    %3 = quake.extract_ref %0[2] : (!quake.veq<3>) -> !quake.ref
    quake.rz (%cst_0) %3 : (f64, !quake.ref) -> ()
    quake.z %2 : (!quake.ref) -> ()
    quake.z %2 : (!quake.ref) -> ()
    quake.x [%2] %1 : (!quake.ref, !quake.ref) -> ()
    quake.x [%1] %2 : (!quake.ref, !quake.ref) -> ()
    quake.rx (%cst) %2 : (f64, !quake.ref) -> ()
    quake.z %2 : (!quake.ref) -> ()
    %measOut = quake.mz %0 : (!quake.veq<3>) -> !cc.stdvec<!quake.measure>
    return
  }
  func.func @_ZN4testILm3EEclEv(%arg0: !cc.ptr<i8>) {
    return
  }
}
