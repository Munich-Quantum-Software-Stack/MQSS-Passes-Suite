image: ubuntu:latest

variables:
  RABBITMQ_DEFAULT_USER: guest
  RABBITMQ_DEFAULT_PASS: guest

services:
  - name: rabbitmq
    alias: rabbitmq

before_script:
  - export INSTALL_PREFIX=$HOME
  - export QDMI_PATH=$PWD/qdmi
  - export PATH=$PATH:$INSTALL_PREFIX/bin
  - export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH
  - export LD_LIBRARY_PATH=$QDMI_PATH/build:$LD_LIBRARY_PATH
  - export LD_LIBRARY_PATH=$INSTALL_PREFIX/bin/src/pass_runner:$LD_LIBRARY_PATH
  - export LD_LIBRARY_PATH=$INSTALL_PREFIX/bin/src/pass_runner/passes:$LD_LIBRARY_PATH
  - export LD_LIBRARY_PATH=$INSTALL_PREFIX/bin/src/selector_runner:$LD_LIBRARY_PATH
  - export LD_LIBRARY_PATH=$INSTALL_PREFIX/bin/src/selector_runner/selectors:$LD_LIBRARY_PATH
  - export LD_LIBRARY_PATH=$INSTALL_PREFIX/bin/src/scheduler_runner:$LD_LIBRARY_PATH
  - export LD_LIBRARY_PATH=$INSTALL_PREFIX/bin/src/scheduler_runner/schedulers:$LD_LIBRARY_PATH

stages:
  - deploy
  - test

#cache:
#  key: ${CI_COMMIT_REF_SLUG}
#  paths:
#    - $INSTALL_PREFIX/bin/src/pass_runner
#    - $INSTALL_PREFIX/bin/src/pass_runner/passes
#    - $INSTALL_PREFIX/bin/src/selector_runner
#    - $INSTALL_PREFIX/bin/src/selector_runner/selectors
#    - $INSTALL_PREFIX/bin/src/scheduler_runner
#    - $INSTALL_PREFIX/bin/src/scheduler_runner/schedulers

pages:
  stage: deploy
  script:
    - mkdir public
    - cp -r documentation/html/* public/
  artifacts:
    paths:
      - public
  rules:
    - if: '$CI_COMMIT_REF_NAME == "NoSockets"'

analyze:
  stage: test
  script:
    - apt update
    - apt install -y llvm libopenmpi-dev clang 
    - export LLVM_INCLUDE_PATH=$(llvm-config --includedir)
    - find src -name "*.cpp" -exec clang --analyze -I$LLVM_INCLUDE_PATH -Iqdmi/ {} \;

execute:
  stage: test
  script:
    - apt update
    - apt install -y cmake llvm rabbitmq-server g++ curl
    - export CMAKE_PREFIX_PATH=$(llvm-config --libdir)/cmake/llvm
    - curl -LO https://github.com/alanxz/rabbitmq-c/archive/refs/tags/v0.13.0.tar.gz
    - tar -xf v0.13.0.tar.gz
    - cd rabbitmq-c-0.13.0/
    - mkdir build
    - cd build
    - cmake -DBUILD_TESTING=OFF -DBUILD_EXAMPLES=OFF -DENABLE_SSL_SUPPORT=OFF ..
    - cmake --build . --target install
    - ldconfig
    - cd ../..
    - rm -rf rabbitmq-c-0.13.0/
   # ...
    - cd qdmi
    - mkdir build
    - cd build
    - cmake ..
    - make
    - cd ../..
    - echo QDMI built successfully
    # ...
    - cd tests
    - g++ test.cpp ../src/connection_handling.cpp -o test -lrabbitmq
    - echo Test built successfully
    - cd ..
    # ...
    - mkdir build
    - cd build
    - cmake -DCMAKE_INSTALL_PREFIX=$INSTALL_PREFIX -DCUSTOM_QDMI_PATH=$QDMI_PATH ..
    - cmake --build . --target install
    - ldconfig
    - echo QRM installed successfully
    - daemon_d screen &
    - sleep 1
    - ../tests/test

