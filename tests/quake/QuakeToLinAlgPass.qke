  func.func @__nvqpp__mlirgen__ghzILm3EE() attributes {"cudaq-entrypoint", "cudaq-kernel"} {
    %cst = arith.constant 1.234000e+00 : f64
    %cst_0 = arith.constant 3.141600e+00 : f64
    %0 = quake.alloca !quake.veq<3>
    %1 = quake.extract_ref %0[0] : (!quake.veq<3>) -> !quake.ref
    quake.h %1 : (!quake.ref) -> ()
    %2 = quake.extract_ref %0[0] : (!quake.veq<3>) -> !quake.ref
    quake.x %2 : (!quake.ref) -> ()
    %3 = quake.extract_ref %0[0] : (!quake.veq<3>) -> !quake.ref
    quake.h %3 : (!quake.ref) -> ()
    %4 = quake.extract_ref %0[1] : (!quake.veq<3>) -> !quake.ref
    quake.h %4 : (!quake.ref) -> ()
    %5 = quake.extract_ref %0[0] : (!quake.veq<3>) -> !quake.ref
    %6 = quake.extract_ref %0[1] : (!quake.veq<3>) -> !quake.ref
    quake.x [%5] %6 : (!quake.ref, !quake.ref) -> ()
    %7 = quake.extract_ref %0[0] : (!quake.veq<3>) -> !quake.ref
    quake.h %7 : (!quake.ref) -> ()
    %8 = quake.extract_ref %0[2] : (!quake.veq<3>) -> !quake.ref
    quake.y %8 : (!quake.ref) -> ()
    %9 = quake.extract_ref %0[2] : (!quake.veq<3>) -> !quake.ref
    quake.r1 (%cst_0) %9 : (f64, !quake.ref) -> ()
    %10 = quake.extract_ref %0[2] : (!quake.veq<3>) -> !quake.ref
    quake.ry (%cst) %10 : (f64, !quake.ref) -> ()
    %measOut = quake.mz %0 : (!quake.veq<3>) -> !cc.stdvec<!quake.measure>
    return
  }
