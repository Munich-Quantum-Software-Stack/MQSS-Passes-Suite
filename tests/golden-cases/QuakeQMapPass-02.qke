module attributes {llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128", llvm.triple = "x86_64-unknown-linux-gnu", quake.mangled_name_map = {__nvqpp__mlirgen__ghzILm5EE = "_ZN3ghzILm5EEclEv"}} {
  func.func @__nvqpp__mlirgen__ghzILm5EE() attributes {"cudaq-entrypoint", "cudaq-kernel"} {
    %cst = arith.constant 1.500000e+00 : f64
    %cst_0 = arith.constant 2.250000e+00 : f64
    %cst_1 = arith.constant 3.1415998935699498 : f64
    %0 = quake.alloca !quake.veq<5>
    %1 = quake.extract_ref %0[3] : (!quake.veq<5>) -> !quake.ref
    %2 = quake.extract_ref %0[4] : (!quake.veq<5>) -> !quake.ref
    quake.x [%2] %1 : (!quake.ref, !quake.ref) -> ()
    %3 = quake.extract_ref %0[1] : (!quake.veq<5>) -> !quake.ref
    %4 = quake.extract_ref %0[2] : (!quake.veq<5>) -> !quake.ref
    quake.x [%4] %3 : (!quake.ref, !quake.ref) -> ()
    %5 = quake.extract_ref %0[0] : (!quake.veq<5>) -> !quake.ref
    quake.swap %5, %2 : (!quake.ref, !quake.ref) -> ()
    quake.x [%5] %3 : (!quake.ref, !quake.ref) -> ()
    quake.ry (%cst_1) %1 : (f64, !quake.ref) -> ()
    quake.rz (%cst_0) %4 : (f64, !quake.ref) -> ()
    quake.rx (%cst) %3 : (f64, !quake.ref) -> ()
    quake.t %5 : (!quake.ref) -> ()
    %measOut = quake.mz %5 : (!quake.ref) -> !quake.measure
    %measOut_2 = quake.mz %3 : (!quake.ref) -> !quake.measure
    %measOut_3 = quake.mz %4 : (!quake.ref) -> !quake.measure
    %measOut_4 = quake.mz %1 : (!quake.ref) -> !quake.measure
    %measOut_5 = quake.mz %2 : (!quake.ref) -> !quake.measure
    return
  }
  func.func @_ZN3ghzILm5EEclEv(%arg0: !cc.ptr<i8>) {
    return
  }
}
