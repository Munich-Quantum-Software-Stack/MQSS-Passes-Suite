image: ubuntu:latest

before_script:
  - apt update
  - apt install -y cmake llvm libopenmpi-dev g++ clang
  - export LLVM_INCLUDE_PATH=$(llvm-config --includedir)
  - export CMAKE_PREFIX_PATH=$(llvm-config --libdir)/cmake/llvm
  - export CUSTOM_EXECUTABLE_NAME=qselectorrunner_d
  - export CUSTOM_EXECUTABLE_NAME=qpassrunner_d
  - export CUSTOM_QDMI_PATH=qdmi
  - cd qdmi
  - mkdir build
  - cd build
  - cmake ..
  - make
  - echo "QDMI built successfully"
  - cd ../../tests
  - mpic++ -std=c++14 test.cpp -o test
  - echo "Test built successfully"
  - cd ..

stages:
  - build
  - analyze
  - test

#build_qdmi:
#  stage: build
#  script:
#    - cd qdmi
#    - mkdir -p build
#    - cd build
#    - cmake ..
#    - make
#    - echo "QDMI built successfully"

build_pass_runner:
  stage: build
  script:
    - mkdir -p build
    - cd build
    - cmake -DCUSTOM_EXECUTABLE_NAME=$CUSTOM_EXECUTABLE_NAME -DCUSTOM_QDMI_PATH=CUSTOM_QDMI_PATH ..
    - cmake --build .
    - echo "Pass Runner built successfully"
#  needs:
#    - build_qdmi

build_selector_runner:
  stage: build
  script:
    - cd selector
    - mkdir -p build
    - cd build
    - cmake -DCUSTOM_EXECUTABLE_NAME=$CUSTOM_EXECUTABLE_NAME ..
    - cmake --build .
    - echo "Selector Runner built successfully"

analyze:
  stage: analyze
  script:
    - find . -name "*.cpp" -exec clang --analyze -I$LLVM_INCLUDE_PATH -Iqdmi/ {} \;

testing:
  stage: test
  script:
    - cd build
    - ./qpassrunner_d &
    - sleep 1
    - cd ../selector/build/
    - ./qselectorrunner_d &
    - sleep 1
    - ../../tests/test

