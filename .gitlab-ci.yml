image: ubuntu:latest

variables:
  RABBITMQ_DEFAULT_USER: guest
  RABBITMQ_DEFAULT_PASS: guest

services:
  - name: rabbitmq
    alias: rabbitmq

before_script:
  - export INSTALL_PREFIX=$HOME
  - export QDMI_PATH=$PWD/qdmi
  - export PATH=$PATH:$INSTALL_PREFIX/bin
  - export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH
  - export LD_LIBRARY_PATH=$QDMI_PATH/build:$LD_LIBRARY_PATH
  - export LD_LIBRARY_PATH=$INSTALL_PREFIX/bin/src/pass_runner:$LD_LIBRARY_PATH
  - export LD_LIBRARY_PATH=$INSTALL_PREFIX/bin/src/pass_runner/passes:$LD_LIBRARY_PATH
  - export LD_LIBRARY_PATH=$INSTALL_PREFIX/bin/src/selector_runner:$LD_LIBRARY_PATH
  - export LD_LIBRARY_PATH=$INSTALL_PREFIX/bin/src/selector_runner/selectors:$LD_LIBRARY_PATH
  - export LD_LIBRARY_PATH=$INSTALL_PREFIX/bin/src/scheduler_runner:$LD_LIBRARY_PATH
  - export LD_LIBRARY_PATH=$INSTALL_PREFIX/bin/src/scheduler_runner/schedulers:$LD_LIBRARY_PATH

stages:
  - deploy
  - test

pages:
  stage: deploy
  script:
    - mkdir public
    - cp -r docs/html/* public/
  artifacts:
    paths:
      - public
  rules:
    - if: '$CI_COMMIT_REF_NAME == "NoSockets"'

analyze:
  stage: test
  script:
    - apt update
    - apt install -y llvm libopenmpi-dev clang 
    - export LLVM_INCLUDE_PATH=$(llvm-config --includedir)
    - find src -name "*.cpp" -exec clang --analyze -I$LLVM_INCLUDE_PATH -Iqdmi/ {} \;

run_tests:
  stage: test
  script:
    - make test

