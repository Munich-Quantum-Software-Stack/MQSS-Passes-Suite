module {
  func.func @__nvqpp__mlirgen__ghzILm6EE() attributes {"cudaq-entrypoint", "cudaq-kernel"} {
    %cst = arith.constant -1.5707963267948966 : f64
    %cst_0 = arith.constant -3.1415926535897931 : f64
    %cst_1 = arith.constant 3.1415926535897931 : f64
    %cst_2 = arith.constant 0.78539816339744828 : f64
    %cst_3 = arith.constant 1.5707963267948966 : f64
    %cst_4 = arith.constant 0.000000e+00 : f64
    %cst_5 = arith.constant -0.78539816339744828 : f64
    %cst_6 = arith.constant 5.000000e+00 : f64
    %cst_7 = arith.constant 3.500000e+00 : f64
    %cst_8 = arith.constant 2.340000e+00 : f64
    %0 = quake.alloca !quake.veq<6>
    %1 = quake.extract_ref %0[0] : (!quake.veq<6>) -> !quake.ref
    quake.h %1 : (!quake.ref) -> ()
    %2 = quake.extract_ref %0[1] : (!quake.veq<6>) -> !quake.ref
    quake.x [%1] %2 : (!quake.ref, !quake.ref) -> ()
    %3 = quake.extract_ref %0[2] : (!quake.veq<6>) -> !quake.ref
    quake.x [%2] %3 : (!quake.ref, !quake.ref) -> ()
    %4 = quake.extract_ref %0[3] : (!quake.veq<6>) -> !quake.ref
    quake.x [%3] %4 : (!quake.ref, !quake.ref) -> ()
    %5 = quake.extract_ref %0[4] : (!quake.veq<6>) -> !quake.ref
    quake.x [%4] %5 : (!quake.ref, !quake.ref) -> ()
    %6 = quake.extract_ref %0[5] : (!quake.veq<6>) -> !quake.ref
    quake.x [%5] %6 : (!quake.ref, !quake.ref) -> ()
    quake.x [%4] %1 : (!quake.ref, !quake.ref) -> ()
    quake.x [%1] %4 : (!quake.ref, !quake.ref) -> ()
    quake.x [%4] %1 : (!quake.ref, !quake.ref) -> ()
    quake.rx (%cst_8) %1 : (f64, !quake.ref) -> ()
    quake.ry (%cst_7) %2 : (f64, !quake.ref) -> ()
    quake.rz (%cst_6) %3 : (f64, !quake.ref) -> ()
    quake.h %4 : (!quake.ref) -> ()
    quake.x [%2] %4 : (!quake.ref, !quake.ref) -> ()
    quake.rz (%cst_5) %4 : (f64, !quake.ref) -> ()
    quake.rx (%cst_3) %4 : (f64, !quake.ref) -> ()
    quake.rz (%cst_4) %4 : (f64, !quake.ref) -> ()
    quake.rx (%cst) %4 : (f64, !quake.ref) -> ()
    quake.rz (%cst_4) %4 : (f64, !quake.ref) -> ()
    quake.x [%1] %4 : (!quake.ref, !quake.ref) -> ()
    quake.rz (%cst_2) %4 : (f64, !quake.ref) -> ()
    quake.rx (%cst_3) %4 : (f64, !quake.ref) -> ()
    quake.rz (%cst_4) %4 : (f64, !quake.ref) -> ()
    quake.rx (%cst) %4 : (f64, !quake.ref) -> ()
    quake.rz (%cst_4) %4 : (f64, !quake.ref) -> ()
    quake.x [%2] %4 : (!quake.ref, !quake.ref) -> ()
    quake.rz (%cst_5) %4 : (f64, !quake.ref) -> ()
    quake.rx (%cst_3) %4 : (f64, !quake.ref) -> ()
    quake.rz (%cst_4) %4 : (f64, !quake.ref) -> ()
    quake.rx (%cst) %4 : (f64, !quake.ref) -> ()
    quake.rz (%cst_4) %4 : (f64, !quake.ref) -> ()
    quake.x [%1] %4 : (!quake.ref, !quake.ref) -> ()
    quake.rz (%cst_2) %4 : (f64, !quake.ref) -> ()
    quake.rx (%cst_3) %4 : (f64, !quake.ref) -> ()
    quake.rz (%cst_4) %4 : (f64, !quake.ref) -> ()
    quake.rx (%cst) %4 : (f64, !quake.ref) -> ()
    quake.rz (%cst_4) %4 : (f64, !quake.ref) -> ()
    quake.x [%1] %2 : (!quake.ref, !quake.ref) -> ()
    quake.rz (%cst_5) %2 : (f64, !quake.ref) -> ()
    quake.rx (%cst_3) %2 : (f64, !quake.ref) -> ()
    quake.rz (%cst_4) %2 : (f64, !quake.ref) -> ()
    quake.rx (%cst) %2 : (f64, !quake.ref) -> ()
    quake.rz (%cst_4) %2 : (f64, !quake.ref) -> ()
    quake.x [%1] %2 : (!quake.ref, !quake.ref) -> ()
    quake.rz (%cst_2) %2 : (f64, !quake.ref) -> ()
    quake.rx (%cst_3) %2 : (f64, !quake.ref) -> ()
    quake.rz (%cst_4) %2 : (f64, !quake.ref) -> ()
    quake.rx (%cst) %2 : (f64, !quake.ref) -> ()
    quake.rz (%cst_4) %2 : (f64, !quake.ref) -> ()
    quake.rz (%cst_2) %1 : (f64, !quake.ref) -> ()
    quake.rx (%cst_3) %1 : (f64, !quake.ref) -> ()
    quake.rz (%cst_4) %1 : (f64, !quake.ref) -> ()
    quake.rx (%cst) %1 : (f64, !quake.ref) -> ()
    quake.rz (%cst_4) %1 : (f64, !quake.ref) -> ()
    quake.h %4 : (!quake.ref) -> ()
    quake.phased_rx (%cst_1, %cst_4) %4 : (f64, f64, !quake.ref) -> ()
    quake.phased_rx (%cst_1, %cst) %5 : (f64, f64, !quake.ref) -> ()
    quake.phased_rx (%cst_3, %cst_4) %6 : (f64, f64, !quake.ref) -> ()
    quake.phased_rx (%cst_0, %cst_3) %6 : (f64, f64, !quake.ref) -> ()
    quake.phased_rx (%cst, %cst_4) %6 : (f64, f64, !quake.ref) -> ()
    quake.rz (%cst_3) %1 : (f64, !quake.ref) -> ()
    quake.rx (%cst_3) %1 : (f64, !quake.ref) -> ()
    quake.rz (%cst_4) %1 : (f64, !quake.ref) -> ()
    quake.rx (%cst) %1 : (f64, !quake.ref) -> ()
    quake.rz (%cst_4) %1 : (f64, !quake.ref) -> ()
    quake.rz (%cst_2) %2 : (f64, !quake.ref) -> ()
    quake.rx (%cst_3) %2 : (f64, !quake.ref) -> ()
    quake.rz (%cst_4) %2 : (f64, !quake.ref) -> ()
    quake.rx (%cst) %2 : (f64, !quake.ref) -> ()
    quake.rz (%cst_4) %2 : (f64, !quake.ref) -> ()
    %measOut = quake.mz %0 : (!quake.veq<6>) -> !cc.stdvec<!quake.measure>
    return
  }
}
